# vim: set ft=sh:
#
# Shell Aliases
#

# Check if we forget the colon on scp
function scp() {
    if [[ "$@" =~ : ]]; then
        /usr/bin/scp $@;
    else
        2>&1 echo "ERROR: scp: missing colon";
    fi
}

# Build a gitignore file for project
# See https://www.gitignore.io/
function gitignore() {
    curl --location --show-error --silent "https://www.gitignore.io/api/$@";
}

# Create a data URL from a file
# Adapted from https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function dataurl() {
    local mimeType=$(file -b --mime-type "$1");
    if [[ $mimeType == text/* ]]; then
        mimeType="${mimeType};charset=utf-8";
    fi
    echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

# Start an HTTP server from a directory, optionally specifying the port
# Adapted from https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function server() {
    local port="${1:-8000}";
    # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
    # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
    python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port";
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
# Adapted from https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function tre() {
    tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

# Install IPython and other useful extensions
function install_ipython() {
    PIP_REQUIRE_VIRTUALENV=1 pip install ipython line_profiler memory_profiler
}
